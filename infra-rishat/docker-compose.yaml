version: '3.3'
services:
  db:
    image: postgres:13.0-alpine
    container_name: testshop-postgres
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - ./db/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      - db-data:/var/lib/postgresql/data/
    env_file: .env
    healthcheck:
      test: pg_isready -d $${APP_DB_NAME} -U $${APP_DB_USER}
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: ivr42/testshop:latest
    container_name: testshop-django
    restart: unless-stopped
    networks:
      - frontend
      - backend
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
      - ../data/:/data/
    depends_on:
      db:
        condition: service_healthy
    env_file: .env

  nginx:
    image: nginx:latest
    container_name: testshop-nginx
    restart: unless-stopped
    networks:
      - frontend
    ports:
      - "8000:8000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/proxy_params:/etc/nginx/proxy_params
      - html_volume:/usr/share/nginx/html/
      - static_volume:/usr/share/nginx/html/static/
      - media_volume:/usr/share/nginx/html/media/
    depends_on:
      - backend

networks:
  frontend:
  backend:

volumes:
  db-data:
  static_volume:
  media_volume:
  html_volume:
